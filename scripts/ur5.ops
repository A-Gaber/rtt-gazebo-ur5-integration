// import everything we need
import("rtt-gazebo-ur5-integration")
//import("RTTController")
//import("PIDController")

	displayComponentTypes();

//HighestPriority = 99
//LowestPriority = 1

// #######------- lwr_gazebo : LWRGazeboComponent -------#######
// lwr_gazebo aka LWRGazeboComponent is launched via the world deployer plugin.
// scheduler and period still needs to be set
//setActivity("lwr_gazebo",1,HighestPriority,ORO_SCHED_RT)


// #######------- lwr_pid_controller : RttPIDController -------#######
loadComponent("pid_component","PIDController");
//lwr_osf_controller.parseURDFforKDL(lwr_gazebo.misc.urdf_string)

// #######------- lwr_elm_controller : RttELMController -------#######
loadComponent("elm_component","ELMComponent");

setActivity("pid_component",0.0010,99,ORO_SCHED_RT)
setActivity("elm_component" , 0.0018 , 99 , ORO_SCHED_RT)
//setActivity("ur5_gazebo",1,1,ORO_SCHED_RT)

  //TaskContext* a_task = new MyTask("pid_component");
  // Set a periodic activity with priority=5, period=1000Hz
 // a_task->setActivity( new Activity( 5, 0.001 ));
  // ... start the component:
  //a_task->start(); 


// # Connect Controller to Gazebo
var ConnPolicy cp_ctrl_gz;

connect("pid_component.cmdJntTrq","ur5_gazebo.cmdJntTrq",cp_ctrl_gz);
connect("ur5_gazebo.currJntPos","pid_component.currJntPos",cp_ctrl_gz);
connect("ur5_gazebo.refJntPos","pid_component.refJntPos",cp_ctrl_gz);


var ConnPolicy cp_ctrl_ELM;
connect("elm_component.cmdJntPos","ur5_gazebo.refJntPos",cp_ctrl_ELM);
connect("ur5_gazebo.currJntTrq","elm_component.currJntTrq",cp_ctrl_ELM);
connect("ur5_gazebo.currJntPos","elm_component.currJntPos",cp_ctrl_ELM);


ur5_gazebo.configure()
pid_component.configure()
elm_component.configure()



ur5_gazebo.start()
pid_component.start()
elm_component.start()

